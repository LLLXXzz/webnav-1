{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","n","x","localStorage","getItem","xObject","JSON","parse","hasMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.a75e3985.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('.lastLi')\r\nlet n\r\n// 利用数组哈希表的方式来保存  不然新增的页面无法保存 刷新就没了\r\n//从本地存储提取\r\nconst x = localStorage.getItem('x')\r\n//将字符串转成对象\r\nconst xObject = JSON.parse(x)\r\n//第一次xObject如果是空的话 就存入默认的\r\nconst hasMap = xObject || [\r\n    { logo: 'B', logoType: 'image', url: 'https://www.bilibili.com' },\r\n    { logo: 'Z', logoType: 'image', url: 'https://www.zhihu.com' },\r\n    { logo: 'A', url: 'https://iqiyi.com' },\r\n    { logo: 'A', logoType: 'Text', url: 'https://www.acfun.cn' },\r\n]\r\n//replace('searchValue','replaceValue') 替换为空字符串（目的是不显示）\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')  //删除 /开头的所有内容\r\n}\r\n// 遍历哈希 每一项为node 并生成div添加到页面中（可以替代HTML） (添加在新增页面之前)\r\n//封装到了render函数 渲染时就可以调用\r\nconst render = () => {\r\n    // 增加新的div后再次渲染hasMap 把之前的有的删除点 不然会出现两次\r\n    // 找到已有的每一个li 除了最后一个\r\n    $siteList.find('li:not(.lastLi)').remove()\r\n    hasMap.forEach((node, index) => {\r\n        const $li = $(`<li>\r\n        <div class=\"site\">\r\n            <div class=\"siteLogo\">${node.logo[0]}</div>\r\n            <div class=\"siteLink\">${simplifyUrl(node.url)}</div>\r\n            <div class='siteClose'>\r\n                <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"#icon-close\"></use>\r\n                 </svg>\r\n            </div>\r\n        </div>\r\n </li>`).insertBefore($lastLi)\r\n        //点击打开新的页面 替代a标签\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        //删\r\n        $li.on('click', '.siteClose', (e) => {\r\n            e.stopPropagation() // 阻止冒泡\r\n            hasMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\n\r\n\r\n//一开始加载hasMap\r\nrender();\r\n\r\n//使用jquery监听button\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请问你要添加地网址是啥？')\r\n        //    判断用户输入地url是不是https开头，如果不是自动加上\r\n        if (url.indexOf('https') !== 0) {\r\n            url = 'https://' + url\r\n        }\r\n        hasMap.push({\r\n            logo: simplifyUrl(url)[0].toUpperCase(),\r\n            url: url,\r\n        });\r\n        render()\r\n        //新增后直接打开页面\r\n        // window.open(url)  \r\n    })\r\n\r\n//用户关闭页面之前 把哈希表存到Local Storage(本地存储)\r\nwindow.onbeforeunload = () => {\r\n    //Local Storage只能存字符串 对象转成字符串\r\n    const string = JSON.stringify(hasMap)\r\n    // localStorage是全局变量 可以省略window.localStorage\r\n    // 保存 setItem(key,value) key随便写\r\n    localStorage.setItem('x', string)\r\n}\r\n//键盘导航\r\n// document.addEventListener.....也可以\r\n$(document).on('keypress', (e) => {\r\n    const key = e.key\r\n    for (let i = 0; i < hasMap.length; i++) {\r\n        if (hasMap[i].logo.toLowerCase() === key) {\r\n            window.open(hasMap[i].url)\r\n        }\r\n    }\r\n})"]}